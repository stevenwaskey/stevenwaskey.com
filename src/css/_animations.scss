// Image Fade Animations -------------------------------------------------------------
.img-fade.ng-hide-add, .img-fade.ng-hide-remove {transition: all linear 0.5s;display: block !important;}
.img-fade.ng-hide-add.ng-hide-add-active, .img-fade.ng-hide-remove {opacity: 0;}
.img-fade.ng-hide-add, .img-fade.ng-hide-remove.ng-hide-remove-active {opacity: 1;}

/*
* Page Transitions. 
*/
.main-container
{

	&.ng-enter, &.ng-leave {
	  transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1s;
	  position:absolute;
	}

	&.ng-enter {
	  opacity:0;
	  margin-top:-10px;
	}

	&.ng-enter.ng-enter-active {
	  opacity:1;
	  margin-top:0px;
	}

	&.ng-leave.ng-leave-active {
	  opacity:0;
	}
}


/*
* Vertical Navigation Menu Background Animation.
*/
#site-navigation.bg-navigation
{

	background: linear-gradient(138deg, #70e357, #57e3d8, #5792e3);
	background-size: 1200% 1200%;

	animation: AnimationName 30s ease infinite;
	
	@-webkit-keyframes AnimationName {
	    0%{background-position:0% 10%}
	    50%{background-position:100% 91%}
	    100%{background-position:0% 10%}
	}
	@-moz-keyframes AnimationName {
	    0%{background-position:0% 10%}
	    50%{background-position:100% 91%}
	    100%{background-position:0% 10%}
	}
	@keyframes AnimationName { 
	    0%{background-position:0% 10%}
	    50%{background-position:100% 91%}
	    100%{background-position:0% 10%}
	}
}

/*
* Vertical Navigation Menu Option Animations. 
* I'd rather be reading javascript.
*/
#site-navigation ul li
{

	transition:all ease-in-out 0.5s;

	i{
		transition:all ease-in-out 0.5s;
	}

	/* glow menu option icons on hover */
	&:hover{

		i{
			color: #FFF;
			text-shadow: 0px 0px 13px rgba(150, 201, 252, 1);
		}

	}

	/* hide menu option transition */
	&.ng-hide{
		opacity: 0;
		transition: 0.5s all ease-in-out;
		margin-top: -10px;
    }

	/* show menu option transition */
	&.ng-show{
		opacity: 1;
		transition: 0.5s all ease-in-out;
		margin-top: 0px;
    }

}

/*
* Vertical Navigation Menu Off-Canvas Animations.
*/
.off-canvas__nav
{
    transform: translate3d(0, 0, 0) translateY(-100%);
    transition: all 0.3s cubic-bezier(0.16, 0.63, 0.45, 0.98);
}

.off-canvas__content
{
    transform: translate3d(0, 0, 0) translateX(0px);
    transition: all 0.3s cubic-bezier(0.16, 0.63, 0.45, 0.98);
}

.is-off-canvas-opened .off-canvas__nav
{
    transform: translate3d(0, 0, 0) translateY(0%);
}

.is-off-canvas-opened .off-canvas__content
{
    transform: translate3d(0, 0, 0) translate(0px);
}


/*
* On devices with a medium width screen or larger,
* we'll over-ride some transitions to change from
* vertical to horizontal. Boo-ya.
*/
@media (min-width: $screen-md-min)
{

	.off-canvas__nav {
	    transform: translate3d(0, 0, 0) translateX(-250px);
	    transition: all 0.3s cubic-bezier(0.16, 0.63, 0.45, 0.98);
	}
	
	.off-canvas__content {
	    transform: translate3d(0, 0, 0) translateX(0);
	    transition: all 0.3s cubic-bezier(0.16, 0.63, 0.45, 0.98);
	}
	
	.is-off-canvas-opened .off-canvas__nav {
	    transform: translate3d(0, 0, 0) translateX(0);
	}
	
	.is-off-canvas-opened .off-canvas__content {
	    transform: translate3d(0, 0, 0) translate(250px);
	}

}




/**
 * We're going to include the css for the 
 * [About] section accordion.
 *
 *
 * vAccordion - AngularJS multi-level accordion component
 * @version v1.6.0
 * @link http://lukaszwatroba.github.io/v-accordion
 * @author Łukasz Wątroba <l@lukaszwatroba.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */

/***************************************
  vAccordion
 ***************************************/
/**
 * Example HTML:
 *
  <v-accordion class="vAccordion--default">
    <v-pane>
      <v-pane-header id="pane-header" aria-controls="pane-content">
         [content]
      </v-pane-header>
      <v-pane-content id="pane-content" aria-labelledby="pane-header">
        [content]
      </v-pane-content>
    </v-pane>
  </v-accordion>
 */
/* Base styles
 ***************************************/
v-accordion {
  display: block; }

v-pane {
  display: block; }
  v-pane.is-expanded > v-pane-content > div {
    display: visible; }
  v-pane[disabled] > v-pane-header {
    opacity: 0.6;
    pointer-events: none; }

v-pane-header {
  display: block;
  position: relative;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  outline: none; }
  v-pane-header:focus {
    outline: none; }
  v-pane-header > div {
    display: block; }

v-pane-content {
  display: block;
  position: relative;
  overflow: hidden;
  max-height: 0px; margin:0px;}
  v-pane-content > div {
    visibility: none; }

/* Theme: default
   ***************************************/
.vAccordion--default v-accordion {
  //margin-top: 20px;
  //padding-left: 20px; 
 }

.vAccordion--default v-pane-content > div {
 // padding-bottom: 20px;
  opacity: 0;
  -webkit-transform: translate3d(0, 30px, 0);
          transform: translate3d(0, 30px, 0);
  -webkit-transition: all 0.5s;
          transition: all 0.5s; }

.vAccordion--default v-pane {
  overflow: hidden; }
  .vAccordion--default v-pane.is-expanded > v-pane-header {
  	color: #28ab45;
    border-bottom-color: #28ab45; }
    .vAccordion--default v-pane.is-expanded > v-pane-header::after {
      -webkit-transform: rotate(90deg);
              transform: rotate(90deg);
      opacity: 0; }
    .vAccordion--default v-pane.is-expanded > v-pane-header::before {
      -webkit-transform: rotate(0deg);
              transform: rotate(0deg); }
  .vAccordion--default v-pane.is-expanded > v-pane-content > div {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  .vAccordion--default v-pane[disabled] v-pane-header::after, .vAccordion--default v-pane[disabled] v-pane-header::before {
    display: none; }

.vAccordion--default v-pane-header {
  padding: 5px 0;
  //margin-bottom: 20px;
  border-bottom: 2px solid #D8D8D8;
  -webkit-transition: all 0.25s;
          transition: all 0.25s; 
  	color: $gray-lighter;
}
  .vAccordion--default v-pane-header::after, .vAccordion--default v-pane-header::before {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    right: 0;
    width: 10px;
    height: 1px;
    background-color: #28ab45;
    -webkit-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    will-change: transform;
    -webkit-transition: all 0.25s;
            transition: all 0.25s; }
  .vAccordion--default v-pane-header::before {
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); }
  .vAccordion--default v-pane-header:hover{
    color: $gray; }